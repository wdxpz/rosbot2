<launch>

    <arg name="robot_namespace" default="rb2p_0"/>

    <arg name="use_rviz" default="true"/>

    <!-- Load the robot description parameters--> 
    <!--<param name="robot_description" command="$(find xacro)/xacro.py '$(find rosbot_description)/urdf/rosbot.xacro'"/>-->

    <arg name="map_file" default="$(find tutorial_pkg)/maps/bj01/map.yaml"/>       <!-- path of map file -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

    <group ns="$(arg robot_namespace)">
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen">
            <param name="tf_prefix" value="$(arg robot_namespace)" />
        </node>

        <node pkg="tf" type="static_transform_publisher" name="ROSbot_laser" args="0 0 0 3.14 0 0 rb2p_0/base_link rb2p_0/laser 100"  output="screen"/>

        <node pkg="rplidar_ros" type="rplidarNode" name="rplidar">
            <param name="tf_prefix" value="$(arg robot_namespace)" />
            <param name="frame_id" type="string" value="$(arg robot_namespace)/laser"/>
            <param name="angle_compensate" type="bool" value="true"/>
            <param name="serial_baudrate" type="int" value="256000"/><!-- model A3 (ROSbot 2.0 PRO) -->
        </node>

        <!--launch rosbot_ekf with specific params-->
        <include file="$(find rosbot_ekf)/launch/rosserial_bridge.launch">
            <arg name="serial_port" value="/dev/ttyS4"/>
            <arg name="serial_baudrate" value="460800"/>
        </include>

        <include file="$(find rosbot_ekf)/launch/message_conversion.launch"/>

        <node pkg="robot_localization" type="ekf_localization_node" name="rosbot_ekf" clear_params="true">
            <rosparam command="load" file="$(find rosbot_ekf)/params/ekf_params.yaml"/>
            <param name="base_link_frame" value="/rb2p_0/base_link"/>
            <param name="odom_frame" value="/rb2p_0/odom"/>
            <param name="world_frame" value="/rb2p_0/odom"/>
            <param name="frequency" value="30"/>

            <!--  Placeholder for output topic remapping -->
            <remap from="odometry/filtered" to="/rb2p_0/odom"/>
            <!-- <remap from="accel/filtered" to=""/> -->
        </node>
    
        <node pkg="tf" type="static_transform_publisher" name="imu_publisher" args="0 0 0.02 0 0 0 $(arg robot_namespace)/base_link $(arg robot_namespace)/imu_link 100" />


        <!--launch move_base-->
        <node pkg="move_base" type="move_base" name="move_base" output="screen">
                    <param name="recovery_behavior_enabled" value="true"/>
                    <param name="controller_frequency" value="5.0" />
	            <rosparam file="$(find tutorial_pkg)/config2/rb2p_0.yaml" command="load" ns="global_costmap"/>
                    <rosparam file="$(find tutorial_pkg)/config2/rb2p_0.yaml" command="load" ns="local_costmap"/>
                    <rosparam file="$(find tutorial_pkg)/config2/costmap_common_params.yaml" command="load" ns="global_costmap" />
                    <rosparam file="$(find tutorial_pkg)/config2/costmap_common_params.yaml" command="load" ns="local_costmap" />
                    <rosparam file="$(find tutorial_pkg)/config2/local_costmap_params.yaml" command="load" />
                    <rosparam file="$(find tutorial_pkg)/config2/global_costmap_params.yaml" command="load" />
                    <rosparam file="$(find tutorial_pkg)/config2/trajectory_planner.yaml" command="load" />
                    <!--<remap from="map" to="/map"/>               
                    <param name="global_costmap/global_frame" value="map"/>
                    <param name="global_costmap/laser_scan_sensor/topic" value="$(arg robot_namespace)/scan"/>
                    <param name="local_costmap/global_frame" value="map"/>
                    <param name="local_costmap/laser_scan_sensor/topic" value="$(arg robot_namespace)/scan"/>              
                    <param name="local_costmap/robot_base_frame" value="$(arg robot_namespace)/base_footprint"/>
                    <remap from="map" to="/map"/>-->
        </node>

        <node pkg="amcl" type="amcl" name="amcl" output="screen">
            <remap from="scan" to="/rb2p_0/scan"/>
            <param name="global_frame_id" value="map"/>
            <param name="odom_frame_id" value="/rb2p_0/odom"/>
            <param name="base_frame_id" value="/rb2p_0/base_link"/>
            <!--<param name="use_map_topic" value="true"/>-->
            <remap from="static_map" to="/static_map"/>
            <!--<remap from="map" to="/map"/>-->
            <param name="odom_model_type" value="diff-corrected"/>
            <param name="transform_tolerance" value="0.5"/>
            <param name="update_min_d" value="0.2"/>
            <param name="update_min_a" value="0.2"/>
            <param name="min_particles" value="500"/>
            <param name="max_particles" value="3000"/>
            <param name="tf_broadcast" value="true" />
            <param name="initial_pose_x" value="0.0"/>
            <param name="initial_pose_y" value="0.0"/>
            <param name="initial_pose_a" value="0.0"/>
         </node>

    </group>

    <param name="robot_description" command="$(find xacro)/xacro.py '$(find rosbot_description)/urdf/rosbot.xacro'"/>
    <!-- Show in Rviz   -->
    <!--<node if="$(arg use_rviz)" name="rviz" pkg="rviz" type="rviz" args="-d $(find rosbot_description)/rviz/rosbot.rviz" required="true" output="screen"/>-->
    <node if="$(arg use_rviz)" name="rviz" pkg="rviz" type="rviz" output="screen" />


</launch>

